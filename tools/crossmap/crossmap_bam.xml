<tool id="crossmap_bam" name="CrossMap BAM" version="@WRAPPER_VERSION@-0">
    <description>Convert genome coordinates or annotation files between genome assemblies</description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="requirements"/>
    <expand macro="stdio"/>
    <expand macro="version_command"/>
    <command><![CDATA[
        #if $input_file.extension == "bam":
            #set $input_file = "input.sam"
            samtools view -h '${seq_source.input}' > '${input_file}' &&
        #else:
            #set $input_file = "input.bam"
            ln -s '${seq_source.input}' '${input_file}'
        #end if

        CrossMap.py
            bam

            "$chain_source.input_chain"

            -m $insert_size
            -s $insert_size_stdev
            -t $insert_size_fold

            '${input_file}'
            '${output}'

            && samtools sort "${output}.sam" > '${output}'
            && samtools sort "${output}.unmap.sam" > '${output_unmapped}'
    ]]></command>

    <inputs>
        <conditional name="seq_source">
            <param name="index_source" type="select" label="Source for Input Data">
                <option value="cached">Local data (in galaxy)</option>
                <option value="history">From History</option>
            </param>
                <when value="cached">
                    <param type="data" format="bam" name="input" label="BAM file">
                        <validator type="unspecified_build"/>
                        <!-- Gives error in tests
                        <validator type="dataset_metadata_in_file" filename="liftOver.loc" metadata_name="dbkey" metadata_column="0" message="LiftOver mapping (chain file) is not available for the specified build."/>
                        -->
                    </param>
                    <param name="input_chain" type="select" label="Lift Over To">
                        <options from_file="liftOver.loc">
                            <column name="name" index="1"/>
                            <column name="value" index="2"/>
                            <column name="dbkey" index="0"/>
                            <filter type="data_meta" ref="input" key="dbkey" column="0"/>
                        </options>
                    </param>
                </when>
                <when value="history">
                    <param type="data" format="bam" name="input" label="BAM/SAM file"/>
                    <param type="data" format="csv" name="input_chain" label="LiftOver chain file"/>
                </when>
        </conditional>
        <expand macro="chain" />

        <param name="insert_size" type="float" value="200.0" label="Insert size (-m)" help="Average insert size of pair-end sequencing (bp) [default=200.0]"/>
        <param name="insert_size_stdev" type="float" value="30.0" label="Insert size std. dev (-s)" help="Stanadard deviation of insert size. [default=30.0]"/>
        <param name="insert_size_fold" type="float" value="3.0" label="Insert size std. dev foldchange (-t)" help="A mapped pair is considered as 'proper pair' if both ends mapped to different strand and the distance between them is less then '-t' * stdev from the mean. [default=3.0]"/>
</inputs>

    <outputs>
        <data format="bam" name="output" label="${tool.name} on ${on_string}" />
        <data format="bam" name="output_unmapped" label="${tool.name} (unmapped) on ${on_string}" />
    </outputs>

    <tests>
    <!-- BAM/SAM -->
        <test>
            <param name="index_source" value="history"/>
            <param name="input" value="test_bam_01_input_a.bam" ftype="bam"/>
            <param name="input_chain" value="aToB.over.chain" ftype="csv"/>
            <param name="include_fails" value="False"/>

            <output name="output" file="test_bam_01_output_a.bam" compare="diff" lines_diff="8"/>
            <output name="output_unmapped" file="test_bam_01_output_a.unmap.bam" compare="diff" lines_diff="8"/>
        </test>
    </tests>
    <help>
CrossMap is versatile tool to convert genome coordinates or annotation files between genome
assemblies. It supports mostly commonly used file types, including BAM, BED,BigWig, GFF,
GTF, SAM, Wiggle, and VCF formats. For large plain text file types, such as BED, GFF, GTF
and VCF, reading from remote servers and file compression are supported.
    </help>

    <citations>
        <citation type="doi">10.1093/bioinformatics/btt730</citation>
    </citations>
</tool>
