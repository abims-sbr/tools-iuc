<tool id="crossmap_bed" name="CrossMap BED" version="@WRAPPER_VERSION@-0">
    <description>Convert genome coordinates or annotation files between genome assemblies</description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="requirements"/>
    <expand macro="stdio"/>
    <expand macro="version_command"/>

    <command><![CDATA[
        #set $input_file = str($seq_source.input)

        CrossMap.py bed
            '${chain_source.input_chain}'

            '${input_file}'

            #if str($include_fails) == "True"
            >
            #end if

            '${output}'
    ]]></command>


    <inputs>
       <conditional name="seq_source">
            <expand macro="source" />

            <when value="cached">
                <param format="bed" name="input" type="data" label="BED file"
                       help="BED format file must have at least 3 columns (chrom, start, end) and no more than 12 columns.">
                    <validator type="unspecified_build"/>
                    <!-- Gives error in tests
                    <validator type="dataset_metadata_in_file" filename="liftOver.loc" metadata_name="dbkey" metadata_column="0" message="LiftOver mapping (chain file) is not available for the specified build."/>
                    -->
                </param>
            </when>
            <when value="history">
                <param type="data" format="bed" name="input" label="BED file"
                       help="BED format file must have at least 3 columns (chrom, start, end) and no more than 12 columns."/>
            </when>
        </conditional>
        <expand macro="chain" />

        <param name="include_fails" type="boolean" truevalue="True" checked="false" falsevalue="False" label="Include failed liftovers"
               help="If a coordinate can not be lift over, do you want to include it in the output (it is still being marked 'fail')"/>
    </inputs>

    <outputs>
        <data format="bed" name="output" label="${tool.name} on ${on_string}" />
        <data format="text" name="output2" label="${tool.name} (bedgraph) on ${on_string}" />
    </outputs>

    <tests>
    <!-- BED -->
        <test>
            <param name="index_source" value="history"/>
            <param name="input" value="test_bed_01_input_a.bed" ftype="bed"/>
            <param name="input_chain" value="aToB.over.chain" ftype="csv"/>
            <param name="include_fails" value="False"/>

            <output name="output" file="test_bed_01_output_a__only-matches.bed"/>
        </test>
        <test>
            <param name="index_source" value="history"/>
            <param name="input" value="test_bed_01_input_a.bed" ftype="bed"/>
            <param name="input_chain" value="aToB.over.chain" ftype="txt"/>
            <param name="include_fails" value="True"/>

            <output name="output" file="test_bed_01_output_a__all.bed"/>
        </test>
        <test>
            <param name="index_source" value="history"/>
            <param name="input" value="test_bed_02_input_a.bed" ftype="bed"/>
            <param name="input_chain" value="aToB.over.chain" ftype="txt"/>
            <param name="include_fails" value="False"/>

            <output name="output" file="test_bed_02_output_a__only-matches.bed"/>
        </test>
        <test>
            <param name="index_source" value="history"/>
            <param name="input" value="test_bed_02_input_a.bed" ftype="bed"/>
            <param name="input_chain" value="aToB.over.chain" ftype="txt"/>
            <param name="include_fails" value="True"/>

            <output name="output" file="test_bed_02_output_a__all.bed"/>
        </test>
    </tests>
    <help>
CrossMap is versatile tool to convert genome coordinates or annotation files between genome
assemblies. It supports mostly commonly used file types, including BAM, BED,BigWig, GFF,
GTF, SAM, Wiggle, and VCF formats. For large plain text file types, such as BED, GFF, GTF
and VCF, reading from remote servers and file compression are supported.

CrossMap bed
------------
BED format file must have at least 3 columns (chrom, start, end) and no more than 12 columns.
BED format: http://genome.ucsc.edu/FAQ/FAQformat.html#format1
    </help>

    <citations>
        <citation type="doi">10.1093/bioinformatics/btt730</citation>
    </citations>
</tool>
